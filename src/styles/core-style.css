:root {
    --trans-color-1: rgb(183, 184, 176);
    --trans-color-2: rgb(168, 165, 158);
    --trans-gradient: repeating-linear-gradient(
        -45deg,
        var(--trans-color-1),
        var(--trans-color-1) .5em,
        var(--trans-color-2) .5em,
        var(--trans-color-2) 1em
    );
}

html, body {
    width: 100vw; height: 100vh;
    margin: 0; padding: 0;
}

body {
    display: flex;
    flex-direction: row;
}

#frame {
    position: relative; overflow: hidden; /* clip things */
    flex: 1;
    background: black;
}

#scene {
    position: absolute; transform-origin: 0 0;
    width: 0; height: 0;

    /* i think this helps streamline the panning by telling the browser that it
       will be constantly moving
       https://stackoverflow.com/questions/26907265/css-will-change-how-to-use-it-how-it-works */
    /* will-change: transform; */
}

#frame {
    cursor: grab;
    background: var(--trans-gradient);
}

.card {
    position: absolute;
    width: 240px; height: 144px;

    background-color: white;
    color: black;

    /* tiny curve on corners */
    border-radius: .5em;
    /* thick black line below */
    border-bottom: 3px solid black;

    font-family: "Lora", sans-serif;
    display: flex;
    margin: 0; 
    word-wrap: break-word;

    background-size: cover;
}

.card-text {
    width: 100%;
    padding: 16px;
}

.icon-bar {
    position: absolute;
    
    display: grid;
    gap: .5em;
    margin: 0;
}

.icon-bar > * {
    width: 2em;
    height: 2em;
    grid-row: 1;

    padding: 0;
    
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
}

.card-icon-bar {
    left: 50%; bottom: 0;
    transform: translate(-50%, 50%);

    font-size: 1rem;
    column-gap: .75em;
}

.target {
    position: absolute;
    width: 240px; height: 144px;
    z-index: -1;

    /* tiny curve on corners */
    border-radius: .5em;
    /* thick black line */
    border: 3px solid black;
    background: black;

    opacity: 50%;
}

.animate {
    /* pointer-events: none; */
    transition: transform .2s ease-in-out, opacity .2s ease-in-out;
}
